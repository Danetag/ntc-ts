{"version":3,"file":"bundle.js","sources":["../src/colors/minimal.ts","../src/ntc.ts","index.js"],"sourcesContent":["import { COLOR } from '../types'\n\nexport const MINIMAL_COLORS: COLOR[] = [\n  ['000000', 'Black'],\n  ['0000FF', 'Blue'],\n  ['00FF00', 'Green'],\n  ['00FFFF', 'Cyan / Aqua'],\n  ['315BA1', 'Azure'],\n  ['370202', 'Chocolate'],\n  ['483C32', 'Taupe'],\n  ['4F69C6', 'Indigo'],\n  ['660099', 'Purple'],\n  ['706555', 'Coffee'],\n  ['888D65', 'Avocado'],\n  ['967BB6', 'Lavender Purple'],\n  ['A9C6C2', 'Opal'],\n  ['AF8F2C', 'Alpine'],\n  ['DA3287', 'Cerise'],\n  ['EB9373', 'Apricot'],\n  ['ED9121', 'Carrot Orange'],\n  ['F5F5DC', 'Beige'],\n  ['FDE910', 'Lemon'],\n  ['FF0000', 'Red'],\n  ['FF007F', 'Rose'],\n  ['FF00FF', 'Magenta / Fuchsia'],\n  ['FF681F', 'Orange'],\n  ['FF69B4', 'Hot Pink'],\n  ['FF7F50', 'Coral'],\n  ['FF8C69', 'Salmon'],\n  ['FFC0CB', 'Pink'],\n  ['FFDB58', 'Mustard'],\n  ['FFDDAF', 'Caramel'],\n  ['FFE5B4', 'Peach'],\n  ['FFFDD0', 'Cream'],\n  ['FFFF00', 'Yellow'],\n  ['FFFFF0', 'Ivory'],\n  ['FFFFFF', 'White']\n]\n","import { CACHED_COLOR, COLOR, FORMATTED_COLOR } from './types'\n\nexport let cachedColors: CACHED_COLOR = {}\nexport let colors: COLOR[] = [['000000', 'Black']]\n\nexport const NOT_A_COLOR = 'not-a-color'\n\nfunction getRGB (color: string, divider = 1): number[] {\n  return [\n    parseInt(`0x${color.substring(1, 3)}`, 16) / divider,\n    parseInt(`0x${color.substring(3, 5)}`, 16) / divider,\n    parseInt(`0x${color.substring(5, 7)}`, 16) / divider\n  ]\n}\n\nfunction getHSL (color: string): number[] {\n  const rgb = getRGB(color, 255)\n\n  const r = rgb[0]\n  const g = rgb[1]\n  const b = rgb[2]\n\n  const min = Math.min(r, Math.min(g, b))\n  const max = Math.max(r, Math.max(g, b))\n  const delta = max - min\n\n  let h = 0\n  let s = 0\n  const l = (min + max) / 2\n\n  if (l > 0 && l < 1) {\n    s = delta / (l < 0.5 ? (2 * l) : (2 - 2 * l))\n  }\n\n  if (delta > 0) {\n    if (max === r && max !== g) h += (g - b) / delta\n    if (max === g && max !== b) h += (2 + (b - r) / delta)\n    if (max === b && max !== r) h += (4 + (r - g) / delta)\n    h /= 6\n  }\n\n  return [Math.round(h * 255), Math.round(s * 255), Math.round(l * 255)]\n}\n\nfunction formatColor (rgb: string | null, colorName: string, exactMatch = false): FORMATTED_COLOR {\n  return {\n    exactMatch,\n    name: colorName,\n    rgb\n  }\n}\n\nexport function initColors (_colors: COLOR[]): void {\n  colors = [..._colors]\n  flushCachedColors()\n}\n\nexport function flushCachedColors (): void {\n  cachedColors = { ...{} }\n}\n\nexport function getColorName (color?: string): FORMATTED_COLOR {\n  if (typeof color === 'undefined' || color === null) {\n    return formatColor(null, NOT_A_COLOR, false)\n  }\n\n  color = color.toUpperCase()\n\n  // Not a valid color\n  if (color.length < 3 || color.length > 7) {\n    return formatColor(null, NOT_A_COLOR, false)\n  }\n\n  // Missing #\n  if (color.length % 3 === 0) {\n    color = `#${color}`\n  }\n\n  if (color.length === 4) {\n    color = `#${color.substr(1, 1)}${color.substr(1, 1)}${color.substr(2, 1)}${color.substr(2, 1)}${color.substr(3, 1)}${color.substr(3, 1)}`\n  }\n\n  // See if color has been found yet\n  if (typeof cachedColors[color] !== 'undefined') {\n    return cachedColors[color]\n  }\n\n  const rgb = getRGB(color)\n  const r = rgb[0]\n  const g = rgb[1]\n  const b = rgb[2]\n\n  const hsl = getHSL(color)\n  const h = hsl[0]\n  const s = hsl[1]\n  const l = hsl[2]\n\n  let ndf1 = 0\n  let ndf2 = 0\n  let ndf = 0\n\n  let cl = -1\n  let df = -1\n\n  // Find in names\n  for (let i = 0; i < colors.length; i++) {\n    let currentColor = colors[i]\n    const currentHexColor = `#${currentColor[0]}`\n    const currentNameColor = String(currentColor[1])\n\n    // Add RGB/HSL if missing\n    if (typeof currentColor[2] === 'undefined') {\n      const currentRgbColor = getRGB(currentHexColor)\n      const currentHslColor = getHSL(currentHexColor)\n\n      currentColor = currentColor.concat(currentRgbColor)\n      currentColor = currentColor.concat(currentHslColor)\n    }\n\n    // Exact match\n    if (color === currentHexColor) {\n      // add to cached color\n      cachedColors[color] = formatColor(currentHexColor, currentNameColor, true)\n      return cachedColors[color]\n    }\n\n    const cR: number = parseInt(String(currentColor[2]), 10)\n    const cG: number = parseInt(String(currentColor[3]), 10)\n    const cB: number = parseInt(String(currentColor[4]), 10)\n\n    const cH: number = parseInt(String(currentColor[5]), 10)\n    const cS: number = parseInt(String(currentColor[6]), 10)\n    const cL: number = parseInt(String(currentColor[7]), 10)\n\n    ndf1 = Math.pow(r - cR, 2) + Math.pow(g - cG, 2) + Math.pow(b - cB, 2)\n    ndf2 = Math.pow(h - cH, 2) + Math.pow(s - cS, 2) + Math.pow(l - cL, 2)\n\n    ndf = ndf1 + ndf2 * 2\n\n    if (df < 0 || df > ndf) {\n      df = ndf\n      cl = i\n    }\n  }\n\n  // Not found\n  if (cl < 0) {\n    return formatColor(color, color, false)\n  }\n\n  const currentColor = colors[cl]\n  const currentHexColor = `#${currentColor[0]}`\n  const currentNameColor = String(currentColor[1])\n\n  // add to cached color\n  cachedColors[color] = formatColor(currentHexColor, currentNameColor, false)\n\n  return cachedColors[color]\n}\n","import { getColorName, initColors, MINIMAL_COLORS } from \"../dist/ntc-ts.modern\"\n\ninitColors(MINIMAL_COLORS);\nconst color = getColorName('#F89EAB');\n\nconsole.log('color for #F89EAB', color)"],"names":["MINIMAL_COLORS","cachedColors","colors","getRGB","color","divider","parseInt","substring","getHSL","rgb","r","g","b","min","Math","max","delta","h","s","l","round","formatColor","colorName","exactMatch","name","initColors","_colors","flushCachedColors","getColorName","toUpperCase","length","substr","hsl","ndf1","ndf2","ndf","cl","df","i","currentColor","currentHexColor","currentNameColor","String","currentRgbColor","currentHslColor","concat","cR","cG","cB","cH","cS","cL","pow"],"mappings":"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"}